What happens when you initialize a repository? Why do you need to do it?

A new repository is created in the directory.  At this point, the repository is considered empty and there
has been no initial commit.  The files will need to be tracked.

How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area holds file that are set to be committed.  Files will still be contained in the working directory.
Even if the files are removed from the staging area, they will exist in the working directory.  Files that have
been committed will become part of the repository.  I believe the staging area allows a space to organize files that 
may be added to a repository.

How can you use the staging area to make sure you have one commit per logical change?

You can make sure to only add relevant files to the staging area.  If files are there
that should not part of the logical change, you can use "git reset" to remove them.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Branches would be helpful for maintaining a working demo, while trying out new features
in a different version.  This allows you to play around and keep track of the different
versions without having to checkout older commits.

How do the diagrams help you visualize the branch structure?

They help you to understand the reachability of the commits as they relate to different branches.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

Merging two branches will combine the commits desired in the result.  It is represented
in a diagram the way we do to provide a clear illustration of the reachability of the 
commits.